# ─────────────────────────────────────────────────── #
#                 ▒███████▒ ███▄    █     ──          #
#                 ▒ ▒ ▒ ▄▀░ ██ ▀█   █                 #
#     ───         ░ ▒ ▄▀▒░ ▓██  ▀█ ██▒                #
#                   ▄▀▒   ░▓██▒  ▐▌██▒                #
#                 ▒███████▒▒██░   ▓██░                #
#                 ░▒▒ ▓░▒░▒░ ▒░   ▒ ▒                 #
#                 ░░▒ ▒ ░ ▒░ ░░   ░ ▒░                #
#                 ░ ░ ░ ░ ░   ░   ░ ░      ───        #
#                   ░ ░             ░                 #
#   ─             ░                                   #
# ─────────────────────────────────────────────────── #
options:
#	Nome: KhLogin | Autor: Kiberzn
	version: 1.3

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# events
join:
	khcore_notifyUpdate(player, "KhLogin", "khlogin", "68771", "{@version}", "khlogin atualizar")
	khlogin_join(player)
quit:
	file "plugins/KhLogin/players/%player%.yml" exists:
		set {_tries} to yml value "options.tries" of file "plugins/KhLogin/language.yml"
		set yml value "%uuid of player%.logged" of file "plugins/KhLogin/players/%player%.yml" to false
		set yml value "%uuid of player%.tries" of file "plugins/KhLogin/players/%player%.yml" to {_tries}
chat:
	khlogin_cancelEvents(player) == false
	cancel event
drop:
	khlogin_cancelEvents(player) == false
	cancel event
break:
	khlogin_cancelEvents(player) == false
	cancel event
place:
	khlogin_cancelEvents(player) == false
	cancel event
inventory click:
	khlogin_cancelEvents(player) == false
	cancel event
command:
	executor is a player
	khlogin_cancelEvents(player) == false
	command is not "login" or "register"
	cancel event

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# commands
command /khlogin [<text = help>]:
	permission: khlogin.*
	permission message: §3[KhLogin] §7v{@version} §f- §7Criado por §6Kiberzn§7.
	trigger:
		arg 1 == "help":
			send "%nl%&e  Ajuda - Login 1/1%nl% "
			send "&3 /khlogin atualizar &f- &7Atualiza o skript%nl%"
		arg 1 == "atualizar":
			khcore_update(player, "%{khlogin::check_update}%", "KhLogin", script)
command /register [<text>] [<text>]:
	trigger:
		file "plugins/KhLogin/players/%player%.yml" doesn't exist:
			arg 2 is set:
				loop "different" and "your-nick" and "success" and "length":
					set {_%loop-value%} to yml value "messages.register.%loop-value%" of file "plugins/KhLogin/language.yml"
					replace all "\n" in {_%loop-value%} with newline
				loop "minimum" and "maximum":
					set {_%loop-value%} to yml value "options.length.%loop-value%" of file "plugins/KhLogin/language.yml"
					replace all "{%loop-value%}" in {_length} with "%{_%loop-value%}%"
				arg 2 is arg 1:
					length of arg 1 >= {_minimum}:
						length of arg 1 <= {_maximum}:
							arg 1 != player's name:
								create file "plugins/KhLogin/players/%player%.yml"
								khlogin_loadStats(player, arg 1)
								set yml value "%uuid of player%.logged" of file "plugins/KhLogin/players/%player%.yml" to true
								send colored {_success}
								send player title "" with subtitle ""
								khcore_playSound(player, ORB_PICKUP, 1, 15)
							else:
								send colored {_your-nick}
						else:
							send colored {_length}
					else:
						send colored {_length}
				else:
					send colored {_different}
			else:
				set {_x} to yml value "messages.register.usage" of file "plugins/KhLogin/language.yml"
				send colored {_x}
command /login [<text>]:
	trigger:
		file "plugins/KhLogin/players/%player%.yml" exists:
			khlogin_checkLogged(player) == false:
				arg 1 is set:
					set {_x} to yml value "%uuid of player%.password" of file "plugins/KhLogin/players/%player%.yml"
					loop "success" and "wrong":
						set {_%loop-value%} to yml value "messages.login.%loop-value%" of file "plugins/KhLogin/language.yml"
						replace all "\n" in {_%loop-value%} with newline
					arg 1 == {_x}:
						set yml value "%uuid of player%.logged" of file "plugins/KhLogin/players/%player%.yml" to true
						send colored {_success}
						send player title "" with subtitle ""
						khcore_playSound(player, ORB_PICKUP, 1, 15)
					else:
						set {_x} to yml value "%uuid of player%.tries" of file "plugins/KhLogin/players/%player%.yml"
						remove 1 from {_x}
						set yml value "%uuid of player%.tries" of file "plugins/KhLogin/players/%player%.yml" to {_x}
						{_x} is 0:
							set {_kick} to yml value "messages.login.kicks.max-tries" of file "plugins/KhLogin/language.yml"
							replace all "\n" in {_kick} with newline
							kick player because colored {_kick}
						replace all "{tries}" in {_wrong} with "%{_x}%"
						send colored {_wrong}
						khcore_playSound(player, VILLAGER_NO, 1, 5)
				else:
					set {_x} to yml value "messages.login.usage" of file "plugins/KhLogin/language.yml"
					send colored {_x}
command /changepassword [<text>] [<text>]:
	trigger:
		file "plugins/KhLogin/players/%player%.yml" exists:
			arg 2 is set:
				loop "equal" and "wrong" and "your-nick" and "success" and "length":
					set {_%loop-value%} to yml value "messages.changepassword.%loop-value%" of file "plugins/KhLogin/language.yml"
					replace all "\n" in {_%loop-value%} with newline
				loop "minimum" and "maximum":
					set {_%loop-value%} to yml value "options.length.%loop-value%" of file "plugins/KhLogin/language.yml"
					replace all "{%loop-value%}" in {_length} with "%{_%loop-value%}%"
				set {_x} to yml value "%uuid of player%.password" of file "plugins/KhLogin/players/%player%.yml"
				arg 1 is {_x}:
					arg 1 != arg 2:
						length of arg 2 >= {_minimum}:
							length of arg 2 <= {_maximum}:
								arg 2 != player's name:
									set yml value "%uuid of player%.password" of file "plugins/KhLogin/players/%player%.yml" to arg 2
									set yml value "%uuid of player%.logged" of file "plugins/KhLogin/players/%player%.yml" to false
									send colored {_success}
									khcore_playSound(player, ORB_PICKUP, 1, 15)
									khlogin_join(player)
								else:
									send colored {_your-nick}
							else:
								send colored {_length}
						else:
							send colored {_length}
					else:
						send colored {_equal}
				else:
					send colored {_wrong}
			else:
				set {_x} to yml value "messages.changepassword.usage" of file "plugins/KhLogin/language.yml"
				send colored {_x}

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# filemanager
function khlogin_filemanager(use: text):
	{_use} == "create":
		khcore_downGithub("KhLogin/language.yml", "https://raw.githubusercontent.com/KickHolse/KhLogin/main/files/language")
		file "plugins/KhLogin/locations.yml" doesn't exist:
			create file "plugins/KhLogin/locations.yml"
			set yml value "locations.lobby" of file "plugins/KhLogin/locations.yml" to "null"
		khlogin_filemanager("value")

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# functions and sub
function khlogin_join(p: player):
	set {_time} to yml value "options.time" of file "plugins/KhLogin/language.yml"
	file "plugins/KhLogin/players/%{_p}%.yml" doesn't exist:
		loop "title" and "subtitle":
			set {_%loop-value%} to yml value "messages.register.title.%loop-value%" of file "plugins/KhLogin/language.yml"
		send {_p} title colored {_title} with subtitle colored {_subtitle} for 9999 seconds
		wait "%{_time}%" parsed as timespan
		file "plugins/KhLogin/players/%{_p}%.yml" doesn't exist:
			set {_kick} to yml value "messages.login.kicks.time-out" of file "plugins/KhLogin/language.yml"
			replace all "\n" in {_kick} with newline
			kick {_p} because colored {_kick}
	else:
		loop "title" and "subtitle":
			set {_%loop-value%} to yml value "messages.login.title.%loop-value%" of file "plugins/KhLogin/language.yml"
		send {_p} title colored {_title} with subtitle colored {_subtitle} for 9999 seconds
		wait "%{_time}%" parsed as timespan
		khlogin_checkLogged({_p}) == false:
			set {_kick} to yml value "messages.login.kicks.time-out" of file "plugins/KhLogin/language.yml"
			replace all "\n" in {_kick} with newline
			kick {_p} because colored {_kick}
function khlogin_loadStats(p: player, password: text):
	set {_tries} to yml value "options.tries" of file "plugins/KhLogin/language.yml"
	set yml value "%uuid of {_p}%.name" of file "plugins/KhLogin/players/%{_p}%.yml" to {_p}'s displayname
	set yml value "%uuid of {_p}%.password" of file "plugins/KhLogin/players/%{_p}%.yml" to "%{_password}%"
	set yml value "%uuid of {_p}%.tries" of file "plugins/KhLogin/players/%{_p}%.yml" to {_tries}
function khlogin_checkLogged(p: player) :: boolean:
	set {_x%{_p}%} to yml value "%uuid of {_p}%.logged" of file "plugins/KhLogin/players/%{_p}%.yml"
	return {_x%{_p}%}
function khlogin_cancelEvents(p: player) :: boolean:
	file "plugins/KhLogin/players/%{_p}%.yml" doesn't exist:
		return false
	else:
		set {_x%{_p}%} to yml value "%uuid of {_p}%.logged" of file "plugins/KhLogin/players/%{_p}%.yml"
		return {_x%{_p}%}

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# load
load:
	khlogin_filemanager("create")
	wait 1 second
	file "plugins/Skript/scripts/KhCore.sk" exists:
		send "&3[KHLOGIN] &aKhCore was found successfully" to console
	else:
		send "&3[KHLOGIN] &cKhCore was not found successfully" to console
	text from "https://api.spigotmc.org/legacy/update.php?resource=68771" != "{@version}":
		set {khlogin::check_update} to "true"
		send "&3[KHLOGIN] &cYou are not using the latest version of skript" to console
	else:
		send "&3[KHLOGIN] &aYou are using the latest version of skript" to console
	send "&3[KHLOGIN] &aKhLogin &8v{@version} &aenabled!" to console
